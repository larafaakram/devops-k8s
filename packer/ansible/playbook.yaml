- name: "Provision a k8s image"
  hosts: default
  become: true

  tasks:
  # Kubernetes components
  ## Docker
  - apt:
     name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common']
     update_cache: yes
  - apt_key:
     url: https://download.docker.com/linux/ubuntu/gpg
     state: present
  - apt_repository:
     repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
     state: present
  - apt:
      name: ["docker-ce", "docker-ce-cli", "containerd.io"]
      state: present
      update_cache: yes
  - name: Enable the Docker service and ensure that it starts with system boot
    systemd:
      name: docker
      enabled: yes
      state: started
  - name: Add the Kubernetes repository key
    shell: 
      "curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg"
    #apt_key:
      #url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
      #url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      #state: present
      #curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  - name: Add the Kubernetes repository
    shell:
      "echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list"
  #- name: Add the Kubernetes repository
  #  apt_repository:
  #    repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/
  #    state: present
  #    filename: kubernetes.list
  #    update_cache: yes
  #    mode: 0644
  #    validate_certs: no
      #repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
      #state: present
  - name: Install the components
    apt:
      name: ["kubelet","kubeadm","kubectl"]
      update_cache: yes

  - name: Configure kubelet to use cgroupfs
    ansible.builtin.lineinfile:
      path: /etc/default/kubelet
      line: 'KUBELET_EXTRA_ARGS="--cgroup-driver=cgroupfs"'
      create: yes

   # Preparing the instance for Kubernetes
  - name: "adding sysctl net.ipv4.ip_forward"
    sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      state: present
      reload: yes

  - name: "adding sysctl net.bridge.bridge-nf-call-iptables"
    sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: '1'
      state: present
      reload: yes
